import{u as x,g as R,o as $,h as P}from"./query.fd456a5f.js";import{d as U}from"./entry.1780b300.js";import{t as _,a as A,A as L,r as T}from"./CloseButton.272823e9.js";import k from"./ContentPreviewMode.f9e544a7.js";import{r as N,F as b}from"./runtime-core.esm-bundler.0edcc7e6.js";import"./index.288f722b.js";import"./_plugin-vue_export-helper.c27b6911.js";/* empty css                               */const j=(m,d,v)=>{const s=[...d||[]],h=[...v||[]],n=[...m||[]];for(const e of s)if(e.oldPath)if(h.splice(h.findIndex(a=>a.path===e.oldPath),1),s.find(a=>a.path===e.oldPath))n.push({path:e.path,parsed:e.parsed});else{const a=n.find(l=>l.path===e.oldPath);a&&(a.path=e.path,e.parsed?a.parsed=e.parsed:e.pathMeta&&["_file","_path","_id","_locale"].forEach(l=>{a.parsed[l]=e.pathMeta[l]}))}else if(e.new)n.push({path:e.path,parsed:e.parsed});else{const p=n.find(a=>a.path===e.path);p&&Object.assign(p,{path:e.path,parsed:e.parsed})}for(const e of h)n.splice(n.findIndex(p=>p.path===e.path),1);return n},q=()=>{const m=x(),d=R().public.studio||{},v=JSON.parse(JSON.stringify(_())),s=N("pinceauTheme"),h=s&&(s!=null&&s.theme)?s.theme.value:{},n=A("client-db",()=>null),e=$("previewToken",{sameSite:"none",secure:!0}),p=async(t,i,o=!0)=>{const u=await t.getKeys(`${e.value}:`);await Promise.all(u.map(r=>t.removeItem(r))),await t.setItem(`${e.value}$`,JSON.stringify({ignoreBuiltContents:o})),await Promise.all(i.map(r=>{var f;return t.setItem(`${e.value}:${(f=r.parsed)==null?void 0:f._id}`,JSON.stringify(r.parsed))}))},a=t=>{P(m,L,[t||v])},l=t=>{!s||!(s!=null&&s.updateTheme)||P(m,s.updateTheme,t||h)},g=async t=>{const i=await $fetch("api/projects/preview",{baseURL:d.apiURL,params:{token:e.value}}),o=j(i.files,i.additions,i.deletions),u=o.filter(c=>c.path.startsWith("content"));await p(t,u,(i.files||[]).length!==0);const r=o.filter(c=>c.path.startsWith(".studio")),f=r.find(c=>c.path===".studio/app.config.json");a(f==null?void 0:f.parsed);const w=r.find(c=>c.path===".studio/tokens.config.json");a(w==null?void 0:w.parsed)},y=async()=>{await $fetch("api/projects/preview/sync",{baseURL:d.apiURL,method:"POST",params:{token:e.value}})},C=t=>{const i=b(()=>!!t.value),o=document.createElement("div");o.id="__nuxt_preview_wrapper",document.body.appendChild(o),U(k,{previewToken:e,apiURL:d.apiURL,storageReady:i,refresh:()=>g(t.value).then(()=>T()),init:y}).mount(o)},I=async t=>{var o,u;if(!t)return null;t=t.replace(/\/$/,"");let i=await((o=n.value)==null?void 0:o.getItem(`${e.value}:${t}`));return i||(i=await((u=n.value)==null?void 0:u.getItem(t))),i};return{apiURL:d.apiURL,previewToken:e,contentStorage:n,syncPreview:g,syncPreviewFiles:p,syncPreviewAppConfig:a,syncPreviewTokensConfig:l,requestPreviewSynchronization:y,mountPreviewUI:C,findContentWithId:I}};export{q as useStudio};
